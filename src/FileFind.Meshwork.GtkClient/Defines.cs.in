//
// Defines.cs:
//
// Authors:
//   Christian Hergert <christian.hergert@gmail.com>
//
// Copyright (C) 2005, Christian Hergert
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// Software), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

using System;
using System.Reflection;

namespace FileFind.Meshwork.GtkClient
{
        public class Defines
        {
                public static readonly string Name =
                        Assembly.GetExecutingAssembly ().GetName ().Name;

		public static string Title {
			get {
				Assembly thisAssembly = Assembly.GetExecutingAssembly();
				AssemblyTitleAttribute title = (AssemblyTitleAttribute)AssemblyTitleAttribute.GetCustomAttribute(thisAssembly, typeof (AssemblyTitleAttribute));
				return title.Title;
			}
		}
		
                public static string Version {
			get {
                                string major, minor, revision, build;
                                Version version = Assembly.GetExecutingAssembly().GetName().Version;

                                major = version.Major.ToString("00");
                                minor = version.Minor.ToString("00");
                                build = version.Build.ToString("00");
                                revision = version.Revision.ToString();

                                return  major + "." + minor + "." + build + "." + revision;

			}
		}

                public static readonly string LocaleDir  = "@prefix@/share/locale";
                public static readonly string InstallDir = "@prefix@/lib/meshwork";
        }
}
